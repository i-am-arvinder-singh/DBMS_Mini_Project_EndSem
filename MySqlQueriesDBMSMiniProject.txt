create table person(
  ID int primary key,
  f_name varchar(20),
  m_name varchar(20),
  l_name varchar(20),
  PIN varchar(10),
  address_line varchar(50)
  );

drop table person;
drop table arrival_departure;

create table arrival_departure(
  arrival_date date primary key,
  departure_date date
  );

create table pin_state(
  PIN varchar(10) primary key,
  State varchar(30)
  );
  
  
create table has_contact_info(
  Ph_no varchar(10) primary key,
  ID int,
  foreign key(ID)
  references person(ID)
  on delete cascade
  );

drop table allotment;

create table arrival(
  arrival_id int primary key,
  travelling_from varchar(20),
  travelling_to varchar(20),
  arrival_date date,
  age int,
  ID int,
  foreign key(ID)
  references person(ID)
  on delete cascade
  );
select * from arrival;
select * from person;
select * from allotment;
call clearRoom(1);
insert into arrival values(1,'DEL','DIB','2020-06-06',30,1);
insert into arrival values(2,'DEL','DIB','2020-06-14',35,2);


create table allotment(
	h_no int,
  	flr_no int,
  	room_no int,
  	isEmpty int,
  	ID int,
  	primary key(h_no,room_no,flr_no)
  );

drop table allotment;

insert into allotment values (1,0,0,1,NULL);
insert into allotment values (1,0,1,1,NULL);
insert into allotment values (1,1,0,1,NULL);
insert into allotment values (1,2,0,1,NULL);
insert into allotment values (2,0,1,1,NULL);
insert into allotment values (2,0,0,1,NULL);
insert into allotment values (2,1,0,1,NULL);
insert into allotment values (2,2,0,1,NULL);

select * from allotment;
drop table person;



create table hostels(
  h_no int primary key,
  h_name varchar(30),
  h_warden varchar(30),
  h_contact varchar(10)
  );
  
call isRoomEmpty(50);

drop table hostels;

select * from hostels;
insert into hostels values(1,'JCB','XYZ','9999999999');
insert into hostels values(2,'SR','WXY','9999999989');
insert into has_contact_info values(9943510111,1);

select * from person;
select * from has_contact_info;

select * from PA_1,PA_2
where PA_1.ID=PA_2.ID;

call isRoomEmpty(30);

SHOW PROCEDURE STATUS;
drop procedure isRoomEmpty;


#stored procedures
delimiter //

create procedure isRoomEmpty(
  IN age int
  )
  
begin
	if age>60 then
    select h_no,flr_no,room_no from
    allotment where flr_no=0 and isEmpty=1 limit 1;
    end if;
  	if 40<= age and age<=60 then
    select h_no,flr_no,room_no from
    allotment where flr_no=1 and isEmpty=1 limit 1;
    end if;
  	if age<40 then
    select h_no,flr_no,room_no from
    allotment where flr_no=2 and isEmpty=1 limit 1;
  	end if;
end  //

delimiter;










delimiter //

create procedure clearRoom(
  IN ID int
  )
  
begin
	update allotment set isEmpty=1, ID=NULL
    where allotment.ID = ID;
end  //

delimiter;




delimiter //

create procedure insertPinState(
  IN PIN varchar(10),
  IN state varchar(30)
  )
  
begin
	insert into pin_state values(PIN,state);
end  //

delimiter;




delimiter //

create procedure insertPhNo(
  IN PhNo varchar(10),
  IN ID int
  )
  
begin
	insert into has_contact_info values(PhNo,ID);
end  //

delimiter;



delimiter $$

create trigger allot_by_insert
after insert on arrival
for each row
begin
	if new.age>60 then
    	update allotment set allotment.isEmpty=0,allotment.ID = new.ID
        where allotment.isEmpty=1 and allotment.flr_no=0 limit 1;
    end if;
    if 40<=new.age and new.age<=60 then
    	update allotment set allotment.isEmpty=0,allotment.ID = new.ID
        where allotment.isEmpty=1 and allotment.flr_no=1 limit 1;
    end if;
    if new.age<40 then
    	update allotment set allotment.isEmpty=0,allotment.ID = new.ID
        where allotment.isEmpty=1 and allotment.flr_no=2 limit 1;
    end if;
end $$

delimiter;

select * from allotment;

select * from person;

call isRoomEmpty(30);

insert into person values(1,'Arvinder',NULL,'Singh','786001','Dibrugarh');
insert into person values(2,'Rahul','Kumar','Gupta','786001','Dibrugarh');

insert into arrival values(

insert into person values(3,'ABC1','Arvinder',NULL,'Singh','DEL','DIB',30,'No','2020-06-06');
insert into person values(2,'ABC1','Arvinder',NULL,'Singh','DEL','DIB',30,'No','2020-06-06');

delete from person where ID=1 or ID=2 or ID=3;
call clearRoom(3);
call isRoomEmpty(30);
call insertPhNo('8011634300',1);
call insertPinState('786001','Assam');

select * from pin_state;